# Copyright (c) 2019-2020. TIBCO Software Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

# docker-compose.yml example for JasperReports Server

version: '2'

services:
  jasperserver-cp:
    # image: "jasperserver-cp:${JASPERREPORTS_SERVER_IMAGE_TAG}"
    image: "${IMAGE_REPOSITORY}${JASPERREPORTS_SERVER_APP_IMAGE_NAME}:${JASPERREPORTS_SERVER_IMAGE_TAG}"
    
    build:
      context: .
      args:
        - "TOMCAT_BASE_IMAGE=${TOMCAT_BASE_IMAGE}"
        - "JASPERREPORTS_SERVER_VERSION=${JASPERREPORTS_SERVER_VERSION}"
        - "JAVASCRIPT_RENDERING_ENGINE=${JAVASCRIPT_RENDERING_ENGINE}"

    # expose port on the host
    ports:
      - 8080:8080
      - 8443:8443
    
    depends_on:
      # does init check
      - jasperserver-cp-cmdline
      # depends on jasperserver_cp_repository service if database is in Docker
      - jasperserver_cp_repository
    
    # point to env file with key=value entries 
    env_file: .env
    
    # setting following values here will override settings from env_file
    environment:
      - DB_HOST=jasperserver_cp_repository

    volumes:
      # As of JasperReports Server 7.5, this volume is required:
      #   - saves .jrsks and .jrsksp files if they are created
      #   - provides access to pre-existing keystore related files
      #- /path/to/keystore:/usr/local/share/jasperserver-cp/keystore
      - ./keystore:/usr/local/share/jasperserver-cp/keystore
      
      # zip files in alphabetical order exploded into webapps/jasperserver-cp or running embedded install.sh
      #- /path/to/customization:/usr/local/share/jasperserver-cp/customization
      
      # zip files in alphabetical order exploded into $CATALINA_HOME
      #- /path/to/tomcat/customization:/usr/local/share/jasperserver-cp/tomcat-customization
      
      # SSL .keystore files in this volume loaded into /root.
      # needs KS_PASSWORD environment variable set
      #- ssl_certificate:/usr/local/share/jasperserver-cp/ssl-certificate
      
      # default_master_additional.properties file added to default_master.properties
      # see "To install the WAR file using js-install scripts" in JasperReports Server Installation Guide
      #- jrs_deploy_customization:/usr/local/share/jasperserver-cp/deploy-customization
      #- /path/to/additional:/usr/local/share/jasperserver-cp/deploy-customization
      
      # include a new version of a JDBC driver for repository databases supported by 
      # JasperReports Server.
      # valid dbTypes are: postgresql, mysql, sqlserver, oracle, db2
      #- /path/to/JDBC/driver:/usr/src/jasperreports-server/buildomatic/conf_source/db/<dbType>/jdbc
      # set environment property:
      # maven.jdbc.version=<version # of JDBC driver>
      # have a look at buildomatic/conf_source/db/<dbType> for db.properties for a dbType
      
      # for Mac OS you may want to define local path for volume mounts. 
      # Note that defining path for a named volume is not supported 
      # by Compose. For example:
      # - /some-local-path:/usr/local/tomcat/webapps/jasperserver-cp
      # - ~/jasperserver-cp/license:/usr/local/share/jasperserver-cp/license
      # - /tmp/customization:/usr/local/share/jasperserver-cp/customization
      #
      # Under Docker for Windows, volumes have to be under the logged in user's User area
      #  - /C/Users/aUser/Documents/License:/usr/local/share/jasperserver-cp/license 

    mem_limit: 4g
    mem_reservation: 1g
    cpu_shares: 256
  
  jasperserver-cp-cmdline:
    # image: "jasperserver-cp-cmdline:${JASPERREPORTS_SERVER_IMAGE_TAG}"
    image: "${IMAGE_REPOSITORY}${JASPERREPORTS_SERVER_CMDLINE_IMAGE_NAME}:${JASPERREPORTS_SERVER_IMAGE_TAG}"
    
    build:
      context: .
      dockerfile: Dockerfile-cmdline
      args:
        - "JAVA_BASE_IMAGE=${JAVA_BASE_IMAGE}"
        - "JASPERREPORTS_SERVER_VERSION=${JASPERREPORTS_SERVER_VERSION}"
    
    # depends on jasperserver_cp_repository service if database is in Docker
    depends_on:
      - jasperserver_cp_repository
    
    # point to env file with key=value entries 
    env_file: .env
    
    # setting following values here will override settings from env_file
    environment:
      - DB_HOST=jasperserver_cp_repository
      - JRS_LOAD_SAMPLES=false

    volumes:

      # As of JasperReports Server 7.5, this volume is required:
      #   - saves .jrsks and .jrsksp files if they are created
      #   - provides access to pre-existing keystore related files
      #- /path/to/keystore:/usr/local/share/jasperserver-cp/keystore
      - ./keystore:/usr/local/share/jasperserver-cp/keystore
      
      # zip files in alphabetical order exploded into buildomatic or running embedded install.sh
      #- /path/to/buildomatic_customization:/usr/local/share/jasperserver-cp/buildomatic_customization
     
      # Import/export volumes. Passed as parameter to import/export command
      #- /path/to/export-import:/usr/local/share/jasperserver-cp/import
      
      # include a new version of a JDBC driver for repository databases supported by 
      # JasperReports Server.
      # valid dbTypes are: postgresql, mysql, sqlserver, oracle, db2
      #- /path/to/JDBC/driver:/usr/src/jasperreports-server/buildomatic/conf_source/db/<dbType>/jdbc
      # set environment property:
      # maven.jdbc.version=<version # of JDBC driver>
      # have a look at buildomatic/conf_source/db/<dbType> for db.properties for a dbType

    mem_limit: 2g
    mem_reservation: 256m
    cpu_shares: 256
    command: init
 
 # repository and sample databases too in an image if configured
 # can make this a dependency for the instances above
  jasperserver_cp_repository:
    image: postgres:10
    env_file: .env
    
    volumes:
      - postgres-10-data:/var/lib/postgresql/data

# if using PostgreSQL in a container and persisting the databases
volumes:
  postgres-10-data: